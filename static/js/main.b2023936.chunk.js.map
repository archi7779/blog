{"version":3,"sources":["actions/index.js","reducers/rootReducer.js","components/Login.jsx","components/Registration.jsx","components/styledComponents.js","components/Article.jsx","components/MainPage.jsx","components/CreateNewArticle.jsx","components/OpenedArticle.jsx","components/EditArticle.jsx","components/Nav.jsx","App.jsx","index.jsx"],"names":["logOut","createAction","userInfoFromServer","netErrorToState","setPage","loginStateRequest","loginStateSuccess","loginStateFailure","registrationStateRequest","registrationStateSuccess","registrationStateFailure","getArticlesFromServer","updateLikeStatus","likePost","slug","token","currentLikeStatus","dispatch","a","async","config","headers","Authorization","axios","post","response","article","data","console","log","delete","loginState","handleActions","actions","registrationState","user","state","payload","articles","articlesToStore","findIndex","page","netError","errors","combineReducers","actionCreators","doLogin","validationSchema","yup","email","required","password","Login","props","this","login","validateOnChange","initialValues","onSubmit","setSubmitting","className","name","type","as","Input","placeholder","disabled","Object","entries","length","htmlType","React","Component","connect","doRegistration","username","max","Registration","registrationStatus","map","item","ArticleWrapper","styled","div","StyledCard","img","Card","handleLike","Article","handleClick","event","stopPropagation","title","author","createdAt","favorited","favoritesCount","tagList","body","formedDate","formatDistanceToNow","Date","includeSeconds","addSuffix","size","extra","onClick","htmlFor","theme","key","uniqueId","getArticles","offset","params","url","get","MainPage","handleLogOut","hanglePrevClick","hangleNextClick","history","push","pathname","defaultProps","withRouter","ValidationSchema","Yup","shape","min","description","CreateNewArticle","compact","sendDataToServer","values","isSubmitting","touched","arrayHelpers","slice","index","OpenedArticle","location","numOFArticleInState","replace","handleEditClick","authorName","currentUser","EditArticle","put","Nav","to","exact","path","keys","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"4VAGaA,EAASC,YAAa,WAEtBC,EAAqBD,YAAa,yBAElCE,EAAkBF,YAAa,oBAE/BG,EAAUH,YAAa,oBAEvBI,EAAoBJ,YAAa,kBACjCK,EAAoBL,YAAa,kBACjCM,EAAoBN,YAAa,kBAejCO,EAA2BP,YAAa,2BACxCQ,EAA2BR,YAAa,wBACxCS,EAA2BT,YAAa,wBAexCU,GADcV,YAAa,4BACHA,YAAa,6BA2BrCW,EAAmBX,YAAa,2BAChCY,EAAW,SAACC,EAAMC,EAAOC,GAAd,OAAoC,SAAMC,GAAN,uBAAAC,EAAAC,OAAA,mDACpDC,EAAS,CACbC,QAAS,CAAEC,cAAc,SAAD,OAAWP,KAGhCC,EALqD,4CAAAE,EAAA,MAO/BK,IAAMC,KAAN,0DAC8BV,EAD9B,aAErB,GACAM,IAVoD,OAOhDK,EAPgD,OAYhDC,EAAUD,EAASE,KACzBV,EAASL,EAAiBc,IAb4B,kDAiBtDE,QAAQC,IAAR,MAjBsD,6DAAAX,EAAA,MAqB/BK,IAAMO,OAAN,0DAC8BhB,EAD9B,aAErBM,IAvBoD,QAqBhDK,EArBgD,OAyBhDC,EAAUD,EAASE,KACzBV,EAASL,EAAiBc,IA1B4B,mDA8BtDE,QAAQC,IAAR,MA9BsD,mECnEtDE,EAAaC,aAAa,mBAE3BC,GAF2B,WAG1B,MAAO,eAHmB,cAK3BA,GAL2B,WAM1B,MAAO,YANmB,cAQ3BA,GAR2B,WAS1B,MAAO,cATmB,GAY9B,QAGIC,EAAoBF,aAAa,mBAElCC,GAFkC,WAGjC,MAAO,eAH0B,cAKlCA,GALkC,WAMjC,MAAO,YAN0B,cAQlCA,GARkC,WASjC,MAAO,cAT0B,GAYrC,QAGIE,EAAOH,aAAa,mBAErBC,GAFqB,SAEOG,EAFP,GAE4B,IAAZC,EAAW,EAAXA,QACpC,OAAO,eACFA,EAAQF,SAJO,cAOrBF,GAPqB,WAQpB,MAAO,MARa,GAWxB,IAGIK,EAAWN,aAAa,mBAEzBC,GAFyB,SAEMG,EAFN,GAEqC,IAEvDG,EAFsD,EAArBF,QAAWV,KAErBW,SAC7B,OAAO,YAAIC,MALa,cAOzBN,GAPyB,SAOCG,EAPD,GAOmC,IAAdV,EAAa,EAAxBW,QAAWX,QAK7C,OADAU,EAH4BI,oBAAUJ,GAAO,SAAAZ,GAAI,OAAIA,EAAKV,OAASY,EAAQZ,SAG9CY,EACtB,YAAIU,MAZa,GAe5B,IAGIK,EAAOT,YAAc,eAEtBC,GAFqB,SAEJG,EAFI,GAGpB,OADoC,EAAXC,SACP,KAGtB,GAGIK,EAAWV,YAAc,eAE1BC,GAFyB,SAEAG,EAFA,GAE+B,IAAXT,EAAU,EAArBU,QAAWV,KAC5C,OAAO,eACFA,EAAKgB,WAId,IAGaC,cAAgB,CAC7BT,OACAJ,aACAG,oBACAQ,WACAJ,WACAG,S,2FC7EII,GAAiB,CACrBC,QFJuC,SAAAX,GAAI,OAAI,SAAMlB,GAAN,eAAAC,EAAAC,OAAA,uDAC/CF,EAASZ,KADsC,oBAAAa,EAAA,MAGtBK,IAAMC,KAAK,qDAAsD,CACtFW,UAJ2C,OAGvCV,EAHuC,OAM7CR,EAASX,KACTW,EAASf,EAAmBuB,EAASE,OAPQ,gDAS7CV,EAASd,EAAgB,KAAMsB,WAC/BR,EAASV,KAVoC,2DEO3CwC,GAAmBC,UAAW,CAClCC,MAAOD,YAEJC,QACAC,SAAS,2BACZC,SAAUH,YAAaE,SAAS,gCAO5BE,G,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDjB,MAAQ,GAFI,E,sEAKT,IAAD,EAC8BkB,KAAKD,MAAlCE,EADD,EACCA,MAAOb,EADR,EACQA,SAAUI,EADlB,EACkBA,QACzB,OACE,kBAAC,IAAD,CACEU,kBAAgB,EAChBC,cAAe,CACbN,SAAU,GACVF,MAAO,IAETF,iBAAkBA,GAClBW,SAAU,SAAC/B,EAAD,GAA8B,IAArBgC,EAAoB,EAApBA,cACjBA,GAAc,GACdb,EAAQnB,GACRgC,GAAc,MAGf,gBAAGhB,EAAH,EAAGA,OAAH,OACC,oCACE,kBAAC,IAAD,CAAMiB,UAAU,aACd,kBAAC,IAAD,CACEC,KAAK,QACLC,KAAK,QACLC,GAAIC,IACJC,YAAY,iBACZC,SAAoB,cAAVX,EACVK,UAAWjB,EAAOM,OAASkB,OAAOC,QAAQ1B,GAAU2B,OAAS,EAAI,QAAU,KAG5E1B,EAAOM,OAAS,6BAAMN,EAAOM,OAC9B,kBAAC,IAAD,CACEY,KAAK,WACLC,KAAK,WACLC,GAAIC,IACJC,YAAY,oBACZC,SAAoB,cAAVX,EACVK,UAAWjB,EAAOQ,UAAYgB,OAAOC,QAAQ1B,GAAU2B,OAAS,EAAI,QAAU,KAE/E1B,EAAOQ,UAAY,6BAAMR,EAAOQ,UAChCgB,OAAOC,QAAQ1B,GAAU2B,OAAS,GAAK,4DACxC,kBAAC,KAAD,CACEP,KAAK,UACLQ,SAAS,SACTJ,SAAoB,cAAVX,EACVK,UAAU,UAJZ,mB,GA7CMW,IAAMC,WAkEXC,gBA3FS,SAAArC,GAMtB,MALc,CACZD,KAAMC,EAAMD,KACZoB,MAAOnB,EAAML,WACbW,SAAUN,EAAMM,YAuFoBG,GAAzB4B,CAAyCrB,IClFlDP,GAAiB,CACrB6B,eHaiC,SAAAvC,GAAI,OAAI,SAAMlB,GAAN,eAAAC,EAAAC,OAAA,uDACzCF,EAAST,KADgC,oBAAAU,EAAA,MAGhBK,IAAMC,KAAK,gDAAiD,CAAEW,UAH9C,OAGjCV,EAHiC,OAIvCR,EAASR,KACTQ,EAASf,EAAmBuB,EAASE,OALE,gDAQvCV,EAASd,EAAgB,KAAMsB,WAC/BR,EAASP,KAT8B,2DGXrCqC,GAAmBC,UAAW,CAClC2B,SAAU3B,YAEPE,WACA0B,IAAI,IACP3B,MAAOD,YAEJC,QACAC,SAAS,2BACZC,SAAUH,YAAaE,SAAS,gCAO5B2B,G,YACJ,WAAYxB,GAAQ,IAAD,8BACjB,4CAAMA,KACDjB,MAAQ,GAFI,E,sEAKT,IAAD,EACkDkB,KAAKD,MAAtDqB,EADD,EACCA,eAAgBI,EADjB,EACiBA,mBAAoBpC,EADrC,EACqCA,SAC5C,OACE,kBAAC,IAAD,CACEc,kBAAgB,EAChBC,cAAe,CACbkB,SAAU,GACV1B,MAAO,GACPE,SAAU,IAEZJ,iBAAkBA,GAClBW,SAAU,SAAC/B,EAAD,GAA8B,IAArBgC,EAAoB,EAApBA,cACjBA,GAAc,GACde,EAAe/C,GACfgC,GAAc,MAGf,gBAAGhB,EAAH,EAAGA,OAAH,OACC,oCACE,kBAAC,IAAD,CAAMiB,UAAU,aACd,kBAAC,IAAD,CACEC,KAAK,WACLC,KAAK,QACLC,GAAIC,IACJC,YAAY,iBACZC,SAAiC,cAAvBY,EACVlB,UAAWjB,EAAOgC,UAAYjC,EAASiC,SAAW,QAAU,KAG7DjC,EAASiC,UAAY,6BAAMjC,EAASiC,UACpChC,EAAOgC,UAAY,6BAAMhC,EAAOgC,UACjC,kBAAC,IAAD,CACEd,KAAK,QACLC,KAAK,QACLC,GAAIC,IACJC,YAAY,iBACZC,SAAiC,cAAvBY,EACVlB,UAAWjB,EAAOM,OAASP,EAASO,MAAQ,QAAU,KAEvDP,EAASO,OAAS,6BAAMP,EAASO,OACjCN,EAAOM,OAAS,6BAAMN,EAAOM,OAC9B,kBAAC,IAAD,CACEY,KAAK,WACLC,KAAK,WACLC,GAAIC,IACJC,YAAY,oBACZC,SAAiC,cAAvBY,EACVlB,UAAWjB,EAAOQ,UAAYT,EAASS,SAAW,QAAU,KAE7DT,EAASS,UAAYT,EAASS,SAAS4B,KAAI,SAAAC,GAAI,OAAI,6BAAMA,MACzDrC,EAAOQ,UAAY,6BAAMR,EAAOQ,UACjC,kBAAC,KAAD,CACEW,KAAK,UACLQ,SAAS,SACTJ,SAAiC,cAAvBY,EACVlB,UAAU,UAJZ,mB,GAzDaW,IAAMC,WA+ElBC,gBA3GS,SAAArC,GAMtB,MALc,CACZD,KAAMC,EAAMD,KACZ2C,mBAAoB1C,EAAMF,kBAC1BQ,SAAUN,EAAMM,YAuGoBG,GAAzB4B,CAAyCI,I,4tBChHjD,IAAMI,GAAiBC,KAAOC,IAAV,MAqBdC,IATqBF,KAAOC,IAAV,MACGD,KAAOC,IAAV,MACGD,KAAOC,IAAV,MAEPD,KAAOG,IAAV,MAKKH,aAAOI,KAAPJ,CAAH,O,mBCVjBrC,GAAiB,CACrB0C,WAAYtD,GAGRuD,G,2MACJC,YAAc,SAAC3E,EAAMC,EAAOC,GAAd,OAAoC,SAAA0E,GAChDA,EAAMC,mBAENJ,EADuB,EAAKlC,MAApBkC,YACGzE,EAAMC,EAAOC,K,wEAGhB,IAAD,EAIHsC,KAAKD,MAJF,IAEL3B,QAAWkE,EAFN,EAEMA,MAAOC,EAFb,EAEaA,OAAQC,EAFrB,EAEqBA,UAAWC,EAFhC,EAEgCA,UAAWC,EAF3C,EAE2CA,eAAgBC,EAF3D,EAE2DA,QAASnF,EAFpE,EAEoEA,KAAMoF,EAF1E,EAE0EA,KAC/EnF,EAHK,EAGLA,MAEIoF,EAAaC,aAAoB,IAAIC,KAAKP,GAAY,CAC1DQ,gBAAgB,EAChBC,WAAW,IAGb,OACE,kBAACnB,GAAD,CAAYoB,KAAK,QAAQZ,MAAOA,EAAOa,MAAO,yCAAeN,IAC3D,yBAAKvC,UAAU,sBACb,sCAAYiC,EAAOlB,UACnB,2BAAIuB,IAGN,yBAAKtC,UAAU,qBAAqB8C,QAASpD,KAAKmC,YAAY3E,EAAMC,EAAOgF,IACxEA,EACC,2BAAOY,QAAQ,WACZ,IACD,kBAAC,KAAD,CAAM7C,KAAK,QAAQ8C,MAAM,WACxBZ,GAGH,2BAAOW,QAAQ,YACZ,IACD,kBAAC,KAAD,CAAM7C,KAAK,UACVkC,IAKP,yBAAKpC,UAAU,sBACZqC,EAAQlB,KAAI,SAAAC,GAAI,OACf,0BAAM6B,IAAKC,sBAAX,KAA0B9B,Y,GA1ChBT,IAAMC,WAiEbC,gBA1ES,WAEtB,MADc,KAyEwB5B,GAAzB4B,CAAyCe,ICjElD3C,GAAiB,CACrB7C,OAAQiC,EACR8E,YN0BmC,SAAC,GAAD,uBAAEhG,EAAF,KAAS0B,EAAT,YAAmB,SAAMxB,GAAN,uBAAAC,EAAAC,OAAA,uDAGpDF,EADW,IAATwB,EACOrC,IAEAA,EAAQqC,IAGL,GAERuE,EAAkB,IAATvE,EAAa,GAAb,iBAAyC,IAAZA,EAAO,IAC7CwE,EAXgD,iBAQxC,GARwC,YAWpBD,GAC5BE,EAZgD,yDAYQD,GACxD7F,EAAS,CACbC,QAAS,CAAEC,cAAc,SAAD,OAAWP,KAdiB,oBAAAG,EAAA,MAiB7BK,IAAM4F,IAAID,EAAK9F,IAjBc,OAiB9CkB,EAjB8C,OAkBpDrB,EAASN,EAAsB2B,IAlBqB,kDAsBpDV,QAAQC,IAAR,MAtBoD,4DMvBlDuF,G,2MAeJC,aAAe,YAEbrH,EADmB,EAAKqD,MAAhBrD,W,EAIVsH,gBAAkB,WAAO,IAAD,EAKlB,EAAKjE,MAHCtC,EAFY,EAEpBoB,KAAQpB,MACR0B,EAHoB,EAGpBA,KACAsE,EAJoB,EAIpBA,YAEW,IAATtE,GAIJsE,EAAY,CAAChG,EADG0B,EAAO,K,EAIzB8E,gBAAkB,WAAO,IAAD,EAKlB,EAAKlE,MAHCtC,EAFY,EAEpBoB,KAAQpB,MACR0B,EAHoB,EAGpBA,MAIFsE,EAPsB,EAIpBA,aAGU,CAAChG,EADG0B,EAAO,K,EAIzBgD,YAAc,SAAA/D,GAAY,IAChB8F,EAAY,EAAKnE,MAAjBmE,QACFN,EAAG,oBAAgBxF,EAAQZ,MACjC0G,EAAQC,KAAK,CACXC,SAAUR,EACV9E,MAAOV,K,mFA1CU,IAAD,EAKd4B,KAAKD,MAHCtC,EAFQ,EAEhBoB,KAAQpB,MACR0B,EAHgB,EAGhBA,MAGFsE,EANkB,EAIhBA,aAEU,CAAChG,EAAO0B,M,+BAwCZ,IAAD,SAC0Ba,KAAKD,MAA9Bf,EADD,EACCA,SAAUH,EADX,EACWA,KAAMM,EADjB,EACiBA,KACxB,OACE,oCACE,yBAAKmB,UAAU,YAMb,6BACE,kBAAC,KAAD,CAAQE,KAAK,UAAU4C,QAASpD,KAAKgE,iBAArC,QAGA,8BAAO7E,GACP,kBAAC,KAAD,CAAQqB,KAAK,UAAU4C,QAASpD,KAAKiE,iBAArC,UAIAjF,EAAS+B,OAAS,GAAK,kBAAC,KAAD,MACxB/B,EAASyC,KAAI,SAAArD,GAAO,OACnB,kBAACuD,GAAD,CACE4B,IAAKC,qBACLJ,QAAS,WACP,EAAKjB,YAAY/D,KAGnB,kBAAC,GAAD,CAASA,QAASA,EAASX,MAAOoB,EAAKpB,YAI3C,kBAAC,KAAD,CAAQ+C,KAAK,UAAU4C,QAASpD,KAAK+D,aAAczD,UAAU,UAA7D,gB,GAnFaW,IAAMC,WAAvB4C,GAEGO,aAAe,CACpBlF,KAAM,GAwGKmF,mBAAWnD,aAxHF,SAAArC,GAMtB,MALc,CACZD,KAAMC,EAAMD,KACZG,SAAUF,EAAME,SAChBG,KAAML,EAAMK,QAoHmCI,GAAzB4B,CAAyC2C,KCvH7DS,GAAmBC,YAAaC,MAAM,CAC1CnC,MAAOkC,YACJE,IAAI,EAAG,cACPpD,IAAI,GAAI,aACR1B,SAAS,YACZ+E,YAAaH,YACVE,IAAI,EAAG,cACPpD,IAAI,GAAI,aACR1B,SAAS,YACZgD,KAAM4B,YAAa5E,SAAS,cAWxBL,GAAiB,CACrB0C,WAAYtD,GAGRiG,G,YACJ,WAAY7E,GAAQ,IAAD,8BACjB,4CAAMA,KACDjB,MAAQ,GAFI,E,sEAKT,IAAD,OAEGrB,EACNuC,KAAKD,MADPlB,KAAQpB,MAEV,OACE,kBAAC,IAAD,CACEyC,kBAAgB,EAChBC,cAAe,CACbmC,MAAO,GACPqC,YAAa,GACb/B,KAAM,GACND,QAAS,IAEXlD,iBAAkB8E,GAClBnE,SAAU,SAAC/B,EAAD,GAA8B,IAArBgC,EAAoB,EAApBA,cACjBA,GAAc,IACW,6BAAAzC,EAAAC,OAAA,uDACjB8E,EAAUkC,kBAAQxG,EAAKsE,SACvBvE,EAFiB,eAEFC,EAFE,CAEIsE,YACnBuB,EAAY,EAAKnE,MAAjBmE,QACFpG,EAAS,CACbC,QAAS,CAAEC,cAAc,SAAD,OAAWP,KALd,oBAAAG,EAAA,MAQEK,IAAMC,KAAN,kDAErB,CAAEE,WACFN,IAXmB,OAQfK,EARe,OAafyF,EAbe,oBAaIzF,EAASE,KAAKD,QAAQZ,MAC/C0G,EAAQC,KAAK,CACXC,SAAUR,EACV9E,MAAOX,EAASE,KAAKD,UAhBF,kDAoBrBE,QAAQC,IAAR,MApBqB,yDAuBzBuG,GACAzE,GAAc,MAGf,gBAAG0E,EAAH,EAAGA,OAAQ1F,EAAX,EAAWA,OAAQ2F,EAAnB,EAAmBA,aAAcC,EAAjC,EAAiCA,QAAjC,OACC,oCACE,kBAAC,IAAD,CAAM3E,UAAU,aACd,kBAAC,IAAD,CAAOC,KAAK,QAAQC,KAAK,QAAQC,GAAIC,IAAOC,YAAY,0BACvDtB,EAAOiD,OAAS2C,EAAQ3C,MAAQ,6BAAMjD,EAAOiD,OAAe,KAE7D,kBAAC,IAAD,CACE/B,KAAK,cACLC,KAAK,QACLC,GAAIC,IACJC,YAAY,gCAEbtB,EAAOsF,aAAeM,EAAQN,YAAc,6BAAMtF,EAAOsF,aAAqB,KAE/E,kBAAC,IAAD,CAAOpE,KAAK,OAAOC,KAAK,QAAQC,GAAIC,IAAOC,YAAY,yBACtDtB,EAAOuD,MAAQqC,EAAQrC,KAAO,6BAAMvD,EAAOuD,MAAc,KAC1D,kBAAC,IAAD,CAAYrC,KAAK,YACd,SAAA2E,GAAY,OACX,oCACE,kBAAC,IAAD,CACE3E,KAAK,aACLC,KAAK,QACLC,GAAIC,IACJC,YAAY,gBACZ4C,IAAK,IAENwB,EAAOpC,QAAQwC,MAAM,GAAG1D,KAAI,SAACC,EAAM0D,GAAP,OAC3B,kBAAC,IAAD,CACE7E,KAAI,kBAAa6E,EAAQ,EAArB,KACJ5E,KAAK,QACLC,GAAIC,IACJC,YAAY,gBACZ4C,IAAG,UAAKwB,EAAOpC,QAAQ5B,QAApB,OAA6BW,QAGpC,kBAAC,KAAD,CACElB,KAAK,UACLQ,SAAS,SACTJ,SAAUoE,EACV5B,QAAS,kBAAM2B,EAAOpC,QAAQ,IAAMuC,EAAaf,SAJnD,2BAWN,kBAAC,KAAD,CAAQ3D,KAAK,UAAUQ,SAAS,SAASJ,SAAUoE,GAAnD,gB,GA/FiB/D,IAAMC,WAqHtBoD,eAAWnD,aAjIF,SAAArC,GAKtB,MAJc,CACZD,KAAMC,EAAMD,KACZG,SAAUF,EAAME,YA8H+BO,GAAzB4B,CAAyCyD,KCrI7DrF,GAAiB,CACrB0C,WAAYtD,GAGR0G,G,2MACJlD,YAAc,SAAC3E,EAAMC,EAAOC,GAAd,OAAoC,SAAM0E,GAAN,2BAAAxE,EAAAC,OAAA,uDAChDuE,EAAMC,kBAD0C,EAO5C,EAAKtC,MAJPkC,EAH8C,EAG9CA,WACAiC,EAJ8C,EAI9CA,QACYpF,EALkC,EAK9CwG,SAAYxG,MACZE,EAN8C,EAM9CA,SAN8C,WAAApB,EAAA,MAQ1CqE,EAAWzE,EAAMC,EAAOC,IARkB,OAS1CkG,EAT0C,oBASvB9E,EAAMtB,MACzB+H,EAAsBrG,oBAAUF,GAAU,SAAAd,GAAI,OAAIA,EAAKV,OAASA,KACtE0G,EAAQsB,QAAQ,CACdpB,SAAUR,EACV9E,MAAOE,EAASuG,KAb8B,uC,EAiBlDE,gBAAkB,WAAO,IAAD,EAIlB,EAAK1F,MAFKjB,EAFQ,EAEpBwG,SAAYxG,MACZoF,EAHoB,EAGpBA,QAEIN,EAAG,oBAAgB9E,EAAMtB,KAAtB,SACT0G,EAAQC,KAAK,CACXC,SAAUR,EACV9E,W,wEAIM,IAAD,EAIHkB,KAAKD,MAFKjB,EAFP,EAELwG,SAAYxG,MAFP,IAGLD,KAAQpB,EAHH,EAGGA,MAEJiI,EALC,EAGUrE,SAGXsE,EAAc7G,EAAMyD,OAAOlB,SAC3BwB,EAAaC,aAAoB,IAAIC,KAAKjE,EAAM0D,WAAY,CAChEQ,gBAAgB,EAChBC,WAAW,IAEb,OACE,kBAACnB,GAAD,CAAYoB,KAAK,QAAQZ,MAAOxD,EAAMwD,MAAOa,MAAO,yCAAeN,IACjE,yBAAKvC,UAAU,sBACb,qCAAWxB,EAAMyD,OAAOlB,UACxB,2BAAIvC,EAAM8D,OAGZ,yBACEtC,UAAU,qBACV8C,QAASpD,KAAKmC,YAAYrD,EAAMtB,KAAMC,EAAOqB,EAAM2D,YAElD3D,EAAM2D,UACL,2BAAOY,QAAQ,WACZ,IACD,kBAAC,KAAD,CAAM7C,KAAK,QAAQ8C,MAAM,WACxBxE,EAAM4D,gBAGT,2BAAOW,QAAQ,YACZ,IACD,kBAAC,KAAD,CAAM7C,KAAK,UACV1B,EAAM4D,iBAKb,yBAAKpC,UAAU,sBACZxB,EAAM6D,QAAQlB,KAAI,SAAAC,GAAI,OACrB,0BAAM6B,IAAKC,sBAAX,KAA0B9B,EAA1B,SAGHgE,IAAeC,GAAe,kBAAC,KAAD,CAAQvC,QAASpD,KAAKyF,iBAAtB,a,GAxEXxE,IAAMC,WAqGnBoD,eAAWnD,aAjHF,SAAArC,GAKtB,MAJc,CACZD,KAAMC,EAAMD,KACZG,SAAUF,EAAME,YA8G+BO,GAAzB4B,CAAyCkE,KCjH7Dd,GAAmBC,YAAaC,MAAM,CAC1CnC,MAAOkC,YACJE,IAAI,EAAG,cACPpD,IAAI,GAAI,aACR1B,SAAS,YACZ+E,YAAaH,YACVE,IAAI,EAAG,cACPpD,IAAI,GAAI,aACR1B,SAAS,YACZgD,KAAM4B,YAAa5E,SAAS,cAWxBL,GAAiB,CACrB0C,WAAYtD,GAGRiH,G,YACJ,WAAY7F,GAAQ,IAAD,8BACjB,4CAAMA,KACDjB,MAAQ,GAFI,E,sEAKT,IAAD,EAKHkB,KAAKD,MAHCtC,EAFH,EAELoB,KAAQpB,MACIqB,EAHP,EAGLwG,SAAYxG,MACZoF,EAJK,EAILA,QAEF,OACE,kBAAC,IAAD,CACEhE,kBAAgB,EAChBC,cAAe,CACbmC,MAAOxD,EAAMwD,MACbqC,YAAa7F,EAAM6F,YACnB/B,KAAM9D,EAAM8D,KACZD,QAAS7D,EAAM6D,SAEjBlD,iBAAkB8E,GAClBnE,SAAU,SAAC/B,EAAD,GAA8B,IAArBgC,EAAoB,EAApBA,cACjBA,GAAc,IACW,yBAAAzC,EAAAC,OAAA,uDACjBC,EAAS,CACbC,QAAS,CAAEC,cAAc,SAAD,OAAWP,KAFd,SAKfW,EAAUC,EALK,WAAAT,EAAA,MAMEK,IAAM4H,IAAN,0DAC8B/G,EAAMtB,MACzD,CAAEY,WACFN,IATmB,OAMfK,EANe,OAWfyF,EAXe,oBAWIzF,EAASE,KAAKD,QAAQZ,MAC/C0G,EAAQC,KAAK,CACXC,SAAUR,EACV9E,MAAOX,EAASE,KAAKD,UAdF,wDAkBrBE,QAAQC,IAAR,MAlBqB,8DAsBzBuG,GACAzE,GAAc,MAGf,gBAAG0E,EAAH,EAAGA,OAAQ1F,EAAX,EAAWA,OAAQ2F,EAAnB,EAAmBA,aAAcC,EAAjC,EAAiCA,QAAjC,OACC,oCACE,kBAAC,IAAD,KACE,sCACA,kBAAC,IAAD,CAAO1E,KAAK,QAAQC,KAAK,QAAQC,GAAIC,IAAOC,YAAY,0BACvDtB,EAAOiD,OAAS2C,EAAQ3C,MAAQ,6BAAMjD,EAAOiD,OAAe,KAE7D,4CACA,kBAAC,IAAD,CACE/B,KAAK,cACLC,KAAK,QACLC,GAAIC,IACJC,YAAY,gCAEbtB,EAAOsF,aAAeM,EAAQN,YAAc,6BAAMtF,EAAOsF,aAAqB,KAC/E,qCACA,kBAAC,IAAD,CAAOpE,KAAK,OAAOC,KAAK,QAAQC,GAAIC,IAAOC,YAAY,yBACtDtB,EAAOuD,MAAQqC,EAAQrC,KAAO,6BAAMvD,EAAOuD,MAAc,KAC1D,kBAAC,IAAD,CAAYrC,KAAK,YACd,SAAA2E,GAAY,OACX,oCACE,oCACA,kBAAC,IAAD,CACE3E,KAAK,aACLC,KAAK,QACLC,GAAIC,IACJC,YAAY,gBACZ4C,IAAK,IAENwB,EAAOpC,QAAQwC,MAAM,GAAG1D,KAAI,SAACC,EAAM0D,GAAP,OAC3B,yBAAK7B,IAAKC,sBACR,oCACA,kBAAC,IAAD,CACEjD,KAAI,kBAAa6E,EAAQ,EAArB,KACJ5E,KAAK,QACLC,GAAIC,IACJC,YAAY,gBACZ4C,IAAG,UAAKwB,EAAOpC,QAAQ5B,QAApB,OAA6BW,SAItC,kBAAC,KAAD,CACElB,KAAK,UACLQ,SAAS,SACTJ,SAAUoE,EACV5B,QAAS,kBAAM2B,EAAOpC,QAAQ,IAAMuC,EAAaf,SAJnD,2BAWN,kBAAC,KAAD,CAAQ3D,KAAK,UAAUQ,SAAS,SAASJ,SAAUoE,GAAnD,yB,GAtGY/D,IAAMC,WAuIjBoD,eAAWnD,aAnJF,SAAArC,GAKtB,MAJc,CACZD,KAAMC,EAAMD,KACZG,SAAUF,EAAME,YAgJ+BO,GAAzB4B,CAAyCyE,KCpJpDE,OAnBf,WACE,OACE,wBAAIxF,UAAU,OACZ,4BACE,kBAAC,IAAD,CAAMyF,GAAG,UAAT,UAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,iBAAT,iBAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,KAAT,aAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,QAAT,e,OCwCO5E,oBA1CS,SAAArC,GAItB,MAHc,CACZD,KAAMC,EAAMD,QAwCDsC,EAlCf,YAAwB,IAATtC,EAAQ,EAARA,KACb,OACE,kBAAC,IAAD,KACE,yBAAKyB,UAAU,OACb,kBAAC,GAAD,MACA,kBAAC,IAAD,CAAO0F,OAAK,EAACC,KAAK,UACfpF,OAAOqF,KAAKrH,GAAMkC,OAAS,EAAI,kBAAC,IAAD,CAAUgF,GAAG,MAAS,kBAAC,GAAD,OAExD,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,iBACfpF,OAAOqF,KAAKrH,GAAMkC,OAAS,EAAI,kBAAC,IAAD,CAAUgF,GAAG,MAAS,kBAAC,GAAD,OAExD,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,MACdpF,OAAOqF,KAAKrH,GAAMkC,OAAS,EAAI,kBAAC,IAAD,CAAUgF,GAAG,WAAc,kBAAC,GAAD,OAE9D,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SACdpF,OAAOqF,KAAKrH,GAAMkC,OAAS,EAAI,kBAAC,IAAD,CAAUgF,GAAG,WAAc,kBAAC,GAAD,OAE9D,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,kBACdpF,OAAOqF,KAAKrH,GAAMkC,OAAS,EAAI,kBAAC,IAAD,CAAUgF,GAAG,WAAc,kBAAC,GAAD,OAE9D,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,uBACdpF,OAAOqF,KAAKrH,GAAMkC,OAAS,EAAI,kBAAC,IAAD,CAAUgF,GAAG,WAAc,kBAAC,GAAD,YC/BhEI,GAAQC,YAAYC,EAAUC,YAAQC,YAAgBC,OAE5DC,IAASC,OACP,kBAAC,IAAD,CAAUP,MAAOA,IACf,kBAAC,GAAD,OAEFQ,SAASC,eAAe,W","file":"static/js/main.b2023936.chunk.js","sourcesContent":["import { createAction } from 'redux-actions';\nimport axios from 'axios';\n\nexport const logOut = createAction('LOG_OUT');\n\nexport const userInfoFromServer = createAction('USER_INFO_FROM_SERVER');\n\nexport const netErrorToState = createAction('NET_ERR_TO_STATE');\n\nexport const setPage = createAction('SET_START_PAGING');\n\nexport const loginStateRequest = createAction('LOG_IN_REQUEST');\nexport const loginStateSuccess = createAction('LOG_IN_SUCCESS');\nexport const loginStateFailure = createAction('LOG_IN_FAILURE');\nexport const logInWithEmainAndPassword = user => async dispatch => {\n  dispatch(loginStateRequest());\n  try {\n    const response = await axios.post('https://conduit.productionready.io/api/users/login', {\n      user,\n    });\n    dispatch(loginStateSuccess());\n    dispatch(userInfoFromServer(response.data));\n  } catch (error) {\n    dispatch(netErrorToState(error.response));\n    dispatch(loginStateFailure());\n  }\n};\n\nexport const registrationStateRequest = createAction('REGISTRATION_IN_REQUEST');\nexport const registrationStateSuccess = createAction('REGISTRATION_SUCCESS');\nexport const registrationStateFailure = createAction('REGISTRATION_FAILURE');\nexport const registrWithUserData = user => async dispatch => {\n  dispatch(registrationStateRequest());\n  try {\n    const response = await axios.post(' https://conduit.productionready.io/api/users', { user });\n    dispatch(registrationStateSuccess());\n    dispatch(userInfoFromServer(response.data));\n    // программный редирект\n  } catch (error) {\n    dispatch(netErrorToState(error.response));\n    dispatch(registrationStateFailure());\n  }\n};\n\nexport const getArticles = createAction('GET_ARTICLES_FROM_SERVER');\nexport const getArticlesFromServer = createAction('GET_ARTICLES_FROM_SERVER');\nexport const askArticlesFromServer = ([token, page]) => async dispatch => {\n  // меняем страницу\n  if (page === 1) {\n    dispatch(setPage());\n  } else {\n    dispatch(setPage(page));\n  }\n\n  const limit = 10;\n  // чувствую что хочу переписать это место\n  const offset = page === 1 ? '' : `offset=${(page - 1) * 10}`;\n  const params = `?limit=${limit}&${offset}`;\n  const url = `https://conduit.productionready.io/api/articles${params}`;\n  const config = {\n    headers: { Authorization: `Token ${token}` },\n  };\n  try {\n    const articles = await axios.get(url, config);\n    dispatch(getArticlesFromServer(articles));\n  } catch (error) {\n    // обработать бы\n    // eslint-disable-next-line no-console\n    console.log(error);\n  }\n};\n\nexport const updateLikeStatus = createAction('UPDATE_POST_LIKE_STATUS');\nexport const likePost = (slug, token, currentLikeStatus) => async dispatch => {\n  const config = {\n    headers: { Authorization: `Token ${token}` },\n  };\n\n  if (!currentLikeStatus) {\n    try {\n      const response = await axios.post(\n        `https://conduit.productionready.io/api/articles/${slug}/favorite`,\n        '',\n        config\n      );\n      const article = response.data;\n      dispatch(updateLikeStatus(article));\n    } catch (error) {\n      // обработать бы\n      // eslint-disable-next-line no-console\n      console.log(error);\n    }\n  } else {\n    try {\n      const response = await axios.delete(\n        `https://conduit.productionready.io/api/articles/${slug}/favorite`,\n        config\n      );\n      const article = response.data;\n      dispatch(updateLikeStatus(article));\n    } catch (error) {\n      // обработать бы\n      // eslint-disable-next-line no-console\n      console.log(error);\n    }\n  }\n};\n","import { combineReducers } from 'redux';\nimport { handleActions } from 'redux-actions';\nimport { findIndex } from 'lodash';\nimport * as actions from '../actions';\n// нативно не смогу подключить ридукс\n\nconst loginState = handleActions(\n  {\n    [actions.loginStateRequest]() {\n      return 'requested';\n    },\n    [actions.loginStateFailure]() {\n      return 'failed';\n    },\n    [actions.loginStateSuccess]() {\n      return 'finished';\n    },\n  },\n  'none'\n);\n\nconst registrationState = handleActions(\n  {\n    [actions.registrationStateRequest]() {\n      return 'requested';\n    },\n    [actions.registrationStateFailure]() {\n      return 'failed';\n    },\n    [actions.registrationStateSuccess]() {\n      return 'finished';\n    },\n  },\n  'none'\n);\n\nconst user = handleActions(\n  {\n    [actions.userInfoFromServer](state, { payload }) {\n      return {\n        ...payload.user,\n      };\n    },\n    [actions.logOut]() {\n      return {};\n    },\n  },\n  {}\n);\n\nconst articles = handleActions(\n  {\n    [actions.getArticlesFromServer](state, { payload: { data } }) {\n      // тут настраиваем пагинацию\n      const articlesToStore = data.articles;\n      return [...articlesToStore];\n    },\n    [actions.updateLikeStatus](state, { payload: { article } }) {\n      const numOFArticleInState = findIndex(state, post => post.slug === article.slug);\n      // тут все нормально в такой записи?\n      // eslint-disable-next-line no-param-reassign\n      state[numOFArticleInState] = article;\n      return [...state];\n    },\n  },\n  []\n);\n\nconst page = handleActions(\n  {\n    [actions.setPage](state, { payload }) {\n      return payload || 1;\n    },\n  },\n  1\n);\n\nconst netError = handleActions(\n  {\n    [actions.netErrorToState](state, { payload: { data } }) {\n      return {\n        ...data.errors,\n      };\n    },\n  },\n  {}\n);\n\nexport default combineReducers({\n  user,\n  loginState,\n  registrationState,\n  netError,\n  articles,\n  page,\n});\n","import React from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport { Input, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport * as yup from 'yup';\nimport PropTypes from 'prop-types';\nimport * as actions from '../actions';\n\nconst mapStateToProps = state => {\n  const props = {\n    user: state.user,\n    login: state.loginState,\n    netError: state.netError,\n  };\n  return props;\n};\n\nconst actionCreators = {\n  doLogin: actions.logInWithEmainAndPassword,\n};\n\nconst validationSchema = yup.object({\n  email: yup\n    .string()\n    .email()\n    .required('Please Enter your Email'),\n  password: yup.string().required('Please Enter your password'),\n  // .matches(\n  //     \"^(?=.*[A-Za-z])(?=.*d)(?=.*[@$!%*#?&])[A-Za-zd@$!%*#?&]{8,}$\",\n  //     \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n  // )\n});\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { login, netError, doLogin } = this.props;\n    return (\n      <Formik\n        validateOnChange\n        initialValues={{\n          password: '',\n          email: '',\n        }}\n        validationSchema={validationSchema}\n        onSubmit={(data, { setSubmitting }) => {\n          setSubmitting(true);\n          doLogin(data);\n          setSubmitting(false);\n        }}\n      >\n        {({ errors }) => (\n          <>\n            <Form className=\"loginForm\">\n              <Field\n                name=\"email\"\n                type=\"input\"\n                as={Input}\n                placeholder=\"enter ur email\"\n                disabled={login === 'requested'}\n                className={errors.email || Object.entries(netError).length > 0 ? 'error' : ''}\n              />\n              {/* //надо ли тут доставать точный текст ошибки, или можно свой собственный добавить, так как вариант ошибки только один = неверный адресс\\пароль */}\n              {errors.email && <div>{errors.email}</div>}\n              <Field\n                name=\"password\"\n                type=\"password\"\n                as={Input}\n                placeholder=\"enter ur password\"\n                disabled={login === 'requested'}\n                className={errors.password || Object.entries(netError).length > 0 ? 'error' : ''}\n              />\n              {errors.password && <div>{errors.password}</div>}\n              {Object.entries(netError).length > 0 && <div>Email or Password incorrect</div>}\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                disabled={login === 'requested'}\n                className=\"subBut\"\n              >\n                Submit\n              </Button>\n            </Form>\n          </>\n        )}\n      </Formik>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.string.isRequired,\n  netError: PropTypes.objectOf(PropTypes.string).isRequired,\n  doLogin: PropTypes.func.isRequired,\n};\nexport default connect(mapStateToProps, actionCreators)(Login);\n","import React from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport { Button, Input } from 'antd';\nimport { connect } from 'react-redux';\nimport * as yup from 'yup';\nimport PropTypes from 'prop-types';\nimport * as actions from '../actions';\n\nconst mapStateToProps = state => {\n  const props = {\n    user: state.user,\n    registrationStatus: state.registrationState,\n    netError: state.netError,\n  };\n  return props;\n};\n\nconst actionCreators = {\n  doRegistration: actions.registrWithUserData,\n};\nconst validationSchema = yup.object({\n  username: yup\n    .string()\n    .required()\n    .max(50),\n  email: yup\n    .string()\n    .email()\n    .required('Please Enter your Email'),\n  password: yup.string().required('Please Enter your password'),\n  // .matches(\n  //     \"^(?=.*[A-Za-z])(?=.*d)(?=.*[@$!%*#?&])[A-Za-zd@$!%*#?&]{8,}$\",\n  //     \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n  // )\n});\n\nclass Registration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { doRegistration, registrationStatus, netError } = this.props;\n    return (\n      <Formik\n        validateOnChange\n        initialValues={{\n          username: '',\n          email: '',\n          password: '',\n        }}\n        validationSchema={validationSchema}\n        onSubmit={(data, { setSubmitting }) => {\n          setSubmitting(true);\n          doRegistration(data);\n          setSubmitting(false);\n        }}\n      >\n        {({ errors }) => (\n          <>\n            <Form className=\"loginForm\">\n              <Field\n                name=\"username\"\n                type=\"input\"\n                as={Input}\n                placeholder=\"enter ur login\"\n                disabled={registrationStatus === 'requested'}\n                className={errors.username || netError.username ? 'error' : ''}\n              />\n\n              {netError.username && <div>{netError.username}</div>}\n              {errors.username && <div>{errors.username}</div>}\n              <Field\n                name=\"email\"\n                type=\"input\"\n                as={Input}\n                placeholder=\"enter ur email\"\n                disabled={registrationStatus === 'requested'}\n                className={errors.email || netError.email ? 'error' : ''}\n              />\n              {netError.email && <div>{netError.email}</div>}\n              {errors.email && <div>{errors.email}</div>}\n              <Field\n                name=\"password\"\n                type=\"password\"\n                as={Input}\n                placeholder=\"enter ur password\"\n                disabled={registrationStatus === 'requested'}\n                className={errors.password || netError.password ? 'error' : ''}\n              />\n              {netError.password && netError.password.map(item => <div>{item}</div>)}\n              {errors.password && <div>{errors.password}</div>}\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                disabled={registrationStatus === 'requested'}\n                className=\"subBut\"\n              >\n                Submit\n              </Button>\n            </Form>\n          </>\n        )}\n      </Formik>\n    );\n  }\n}\n\nRegistration.propTypes = {\n  doRegistration: PropTypes.func.isRequired,\n  registrationStatus: PropTypes.string.isRequired,\n  netError: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(Registration);\n","import styled from 'styled-components';\nimport { Card } from 'antd';\n\nexport const ArticleWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-content: center;\n  background-color: #e5e5e5;\n  margin-top: 50px;\n  width: 500px;\n  cursor: pointer;\n`;\n\nexport const ArticleTagsSection = styled.div``;\nexport const ArticleLikeSection = styled.div``;\nexport const ArticleMainSection = styled.div``;\n\nexport const HeartImg = styled.img`\n  width: 20px;\n  height: 35px;\n`;\n\nexport const StyledCard = styled(Card)`\n  width: 100%;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Icon } from 'antd';\nimport PropTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport { StyledCard } from './styledComponents';\nimport * as actions from '../actions';\n\nconst mapStateToProps = () => {\n  const props = {};\n  return props;\n};\n\nconst actionCreators = {\n  handleLike: actions.likePost,\n};\n\nclass Article extends React.Component {\n  handleClick = (slug, token, currentLikeStatus) => event => {\n    event.stopPropagation();\n    const { handleLike } = this.props;\n    handleLike(slug, token, currentLikeStatus);\n  };\n\n  render() {\n    const {\n      article: { title, author, createdAt, favorited, favoritesCount, tagList, slug, body },\n      token,\n    } = this.props;\n    const formedDate = formatDistanceToNow(new Date(createdAt), {\n      includeSeconds: true,\n      addSuffix: true,\n    });\n\n    return (\n      <StyledCard size=\"small\" title={title} extra={<span>created {formedDate}</span>}>\n        <div className=\"ArticleMainSection\">\n          <p>author: {author.username}</p>\n          <p>{body}</p>\n        </div>\n        {/* eslint-disable-next-line jsx-a11y/no-static-element-interactions,jsx-a11y/click-events-have-key-events */}\n        <div className=\"ArticleLikeSection\" onClick={this.handleClick(slug, token, favorited)}>\n          {favorited ? (\n            <label htmlFor=\"imgTest\">\n              {' '}\n              <Icon type=\"heart\" theme=\"filled\" />\n              {favoritesCount}\n            </label>\n          ) : (\n            <label htmlFor=\"imgTest2\">\n              {' '}\n              <Icon type=\"heart\" />\n              {favoritesCount}\n            </label>\n          )}\n        </div>\n\n        <div className=\"ArticleTagsSection\">\n          {tagList.map(item => (\n            <span key={uniqueId()}> #{item}</span>\n          ))}\n        </div>\n      </StyledCard>\n    );\n  }\n}\n\nArticle.propTypes = {\n  handleLike: PropTypes.func.isRequired,\n  token: PropTypes.string.isRequired,\n  article: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    createdAt: PropTypes.string.isRequired,\n    favorited: PropTypes.bool.isRequired,\n    favoritesCount: PropTypes.number.isRequired,\n    tagList: PropTypes.array.isRequired,\n    slug: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n    author: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nexport default connect(mapStateToProps, actionCreators)(Article);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Spin } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { uniqueId } from 'lodash';\nimport { ArticleWrapper } from './styledComponents';\nimport * as actions from '../actions';\nimport Article from './Article';\n\nconst mapStateToProps = state => {\n  const props = {\n    user: state.user,\n    articles: state.articles,\n    page: state.page,\n  };\n  return props;\n};\nconst actionCreators = {\n  logOut: actions.logOut,\n  getArticles: actions.askArticlesFromServer,\n};\n\nclass MainPage extends React.Component {\n  // eslint-disable-next-line react/static-property-placement\n  static defaultProps = {\n    page: 1,\n  };\n\n  componentDidMount() {\n    const {\n      user: { token },\n      page,\n      getArticles,\n    } = this.props;\n    getArticles([token, page]);\n  }\n\n  handleLogOut = () => {\n    const { logOut } = this.props;\n    logOut();\n  };\n\n  hanglePrevClick = () => {\n    const {\n      user: { token },\n      page,\n      getArticles,\n    } = this.props;\n    if (page === 1) {\n      return;\n    }\n    const newPage = page - 1;\n    getArticles([token, newPage]);\n  };\n\n  hangleNextClick = () => {\n    const {\n      user: { token },\n      page,\n      getArticles,\n    } = this.props;\n    const newPage = page + 1;\n    getArticles([token, newPage]);\n  };\n\n  handleClick = article => {\n    const { history } = this.props;\n    const url = `/articles/${article.slug}`;\n    history.push({\n      pathname: url,\n      state: article,\n    });\n  };\n\n  render() {\n    const { articles, user, page } = this.props;\n    return (\n      <>\n        <div className=\"mainPage\">\n          {/*\n          создать компонент артикла\n          настроить пагинацию\n          history api\n          */}\n          <div>\n            <Button type=\"primary\" onClick={this.hanglePrevClick}>\n              Prev\n            </Button>\n            <span>{page}</span>\n            <Button type=\"primary\" onClick={this.hangleNextClick}>\n              Next\n            </Button>\n          </div>\n          {!articles.length > 0 && <Spin />}\n          {articles.map(article => (\n            <ArticleWrapper\n              key={uniqueId()}\n              onClick={() => {\n                this.handleClick(article);\n              }}\n            >\n              <Article article={article} token={user.token} />\n            </ArticleWrapper>\n          ))}\n\n          <Button type=\"primary\" onClick={this.handleLogOut} className=\"logOut\">\n            LogOut\n          </Button>\n        </div>\n      </>\n    );\n  }\n}\n\nMainPage.propTypes = {\n  page: PropTypes.number,\n  getArticles: PropTypes.func.isRequired,\n  logOut: PropTypes.func.isRequired,\n  articles: PropTypes.arrayOf(PropTypes.object).isRequired,\n  history: PropTypes.shape({\n    replace: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  user: PropTypes.shape({\n    token: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default withRouter(connect(mapStateToProps, actionCreators)(MainPage));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Field, Form, FieldArray } from 'formik';\nimport { Input, Button } from 'antd';\nimport { compact } from 'lodash';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as actions from '../actions';\n\nconst ValidationSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  description: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  body: Yup.string().required('Required'),\n});\n\nconst mapStateToProps = state => {\n  const props = {\n    user: state.user,\n    articles: state.articles,\n  };\n  return props;\n};\n\nconst actionCreators = {\n  handleLike: actions.likePost,\n};\n\nclass CreateNewArticle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      user: { token },\n    } = this.props;\n    return (\n      <Formik\n        validateOnChange\n        initialValues={{\n          title: '',\n          description: '',\n          body: '',\n          tagList: [],\n        }}\n        validationSchema={ValidationSchema}\n        onSubmit={(data, { setSubmitting }) => {\n          setSubmitting(true);\n          const sendDataToServer = async () => {\n            const tagList = compact(data.tagList);\n            const article = { ...data, tagList };\n            const { history } = this.props;\n            const config = {\n              headers: { Authorization: `Token ${token}` },\n            };\n            try {\n              const response = await axios.post(\n                `https://conduit.productionready.io/api/articles`,\n                { article },\n                config\n              );\n              const url = `/articles/${response.data.article.slug}`;\n              history.push({\n                pathname: url,\n                state: response.data.article,\n              });\n            } catch (error) {\n              // eslint-disable-next-line no-console\n              console.log(error);\n            }\n          };\n          sendDataToServer();\n          setSubmitting(false);\n        }}\n      >\n        {({ values, errors, isSubmitting, touched }) => (\n          <>\n            <Form className=\"loginForm\">\n              <Field name=\"title\" type=\"input\" as={Input} placeholder=\"enter article's title\" />\n              {errors.title && touched.title ? <div>{errors.title}</div> : null}\n\n              <Field\n                name=\"description\"\n                type=\"input\"\n                as={Input}\n                placeholder=\"enter article's description\"\n              />\n              {errors.description && touched.description ? <div>{errors.description}</div> : null}\n\n              <Field name=\"body\" type=\"input\" as={Input} placeholder=\"enter article's body\" />\n              {errors.body && touched.body ? <div>{errors.body}</div> : null}\n              <FieldArray name=\"tagList\">\n                {arrayHelpers => (\n                  <>\n                    <Field\n                      name=\"tagList[0]\"\n                      type=\"input\"\n                      as={Input}\n                      placeholder=\"enter hashTag\"\n                      key={0}\n                    />\n                    {values.tagList.slice(1).map((item, index) => (\n                      <Field\n                        name={`tagList[${index + 1}]`}\n                        type=\"input\"\n                        as={Input}\n                        placeholder=\"enter hashTag\"\n                        key={`${values.tagList.length}${item}`}\n                      />\n                    ))}\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"button\"\n                      disabled={isSubmitting}\n                      onClick={() => values.tagList[0] && arrayHelpers.push()}\n                    >\n                      add another hashTag\n                    </Button>\n                  </>\n                )}\n              </FieldArray>\n              <Button type=\"primary\" htmlType=\"submit\" disabled={isSubmitting}>\n                sub\n              </Button>\n            </Form>\n          </>\n        )}\n      </Formik>\n    );\n  }\n}\n\nCreateNewArticle.propTypes = {\n  history: PropTypes.shape({\n    replace: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  user: PropTypes.shape({\n    token: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default withRouter(connect(mapStateToProps, actionCreators)(CreateNewArticle));\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { findIndex, uniqueId } from 'lodash';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Icon, Button } from 'antd';\nimport PropTypes from 'prop-types';\n\nimport { StyledCard } from './styledComponents';\nimport * as actions from '../actions';\n\nconst mapStateToProps = state => {\n  const props = {\n    user: state.user,\n    articles: state.articles,\n  };\n  return props;\n};\n\nconst actionCreators = {\n  handleLike: actions.likePost,\n};\n\nclass OpenedArticle extends React.Component {\n  handleClick = (slug, token, currentLikeStatus) => async event => {\n    event.stopPropagation();\n    const {\n      handleLike,\n      history,\n      location: { state },\n      articles,\n    } = this.props;\n    await handleLike(slug, token, currentLikeStatus);\n    const url = `/articles/${state.slug}`;\n    const numOFArticleInState = findIndex(articles, post => post.slug === slug);\n    history.replace({\n      pathname: url,\n      state: articles[numOFArticleInState],\n    });\n  };\n\n  handleEditClick = () => {\n    const {\n      location: { state },\n      history,\n    } = this.props;\n    const url = `/articles/${state.slug}/edit`;\n    history.push({\n      pathname: url,\n      state,\n    });\n  };\n\n  render() {\n    const {\n      location: { state },\n      user: { token, username },\n    } = this.props;\n    const authorName = username;\n    const currentUser = state.author.username;\n    const formedDate = formatDistanceToNow(new Date(state.createdAt), {\n      includeSeconds: true,\n      addSuffix: true,\n    });\n    return (\n      <StyledCard size=\"small\" title={state.title} extra={<span>created {formedDate}</span>}>\n        <div className=\"ArticleMainSection\">\n          <p>author:{state.author.username}</p>\n          <p>{state.body}</p>\n        </div>\n        {/* eslint-disable-next-line jsx-a11y/no-static-element-interactions,jsx-a11y/click-events-have-key-events */}\n        <div\n          className=\"ArticleLikeSection\"\n          onClick={this.handleClick(state.slug, token, state.favorited)}\n        >\n          {state.favorited ? (\n            <label htmlFor=\"imgLike\">\n              {' '}\n              <Icon type=\"heart\" theme=\"filled\" />\n              {state.favoritesCount}\n            </label>\n          ) : (\n            <label htmlFor=\"imgLike2\">\n              {' '}\n              <Icon type=\"heart\" />\n              {state.favoritesCount}\n            </label>\n          )}\n        </div>\n\n        <div className=\"ArticleTagsSection\">\n          {state.tagList.map(item => (\n            <span key={uniqueId()}> #{item} </span>\n          ))}\n        </div>\n        {authorName === currentUser && <Button onClick={this.handleEditClick}>edit</Button>}\n      </StyledCard>\n    );\n  }\n}\nOpenedArticle.propTypes = {\n  handleLike: PropTypes.func.isRequired,\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n      author: PropTypes.object.isRequired,\n      createdAt: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      favorited: PropTypes.bool.isRequired,\n      favoritesCount: PropTypes.number.isRequired,\n      tagList: PropTypes.array.isRequired,\n      body: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  articles: PropTypes.arrayOf(PropTypes.object).isRequired,\n  history: PropTypes.shape({\n    replace: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  user: PropTypes.shape({\n    token: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n  }).isRequired,\n};\nexport default withRouter(connect(mapStateToProps, actionCreators)(OpenedArticle));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Formik, Field, Form, FieldArray } from 'formik';\nimport { Input, Button } from 'antd';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { uniqueId } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport * as actions from '../actions';\n\nconst ValidationSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  description: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  body: Yup.string().required('Required'),\n});\n\nconst mapStateToProps = state => {\n  const props = {\n    user: state.user,\n    articles: state.articles,\n  };\n  return props;\n};\n\nconst actionCreators = {\n  handleLike: actions.likePost,\n};\n\nclass EditArticle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      user: { token },\n      location: { state },\n      history,\n    } = this.props;\n    return (\n      <Formik\n        validateOnChange\n        initialValues={{\n          title: state.title,\n          description: state.description,\n          body: state.body,\n          tagList: state.tagList,\n        }}\n        validationSchema={ValidationSchema}\n        onSubmit={(data, { setSubmitting }) => {\n          setSubmitting(true);\n          const sendDataToServer = async () => {\n            const config = {\n              headers: { Authorization: `Token ${token}` },\n            };\n            try {\n              const article = data;\n              const response = await axios.put(\n                `https://conduit.productionready.io/api/articles/${state.slug}`,\n                { article },\n                config\n              );\n              const url = `/articles/${response.data.article.slug}`;\n              history.push({\n                pathname: url,\n                state: response.data.article,\n              });\n            } catch (error) {\n              // eslint-disable-next-line no-console\n              console.log(error);\n              throw error;\n            }\n          };\n          sendDataToServer();\n          setSubmitting(false);\n        }}\n      >\n        {({ values, errors, isSubmitting, touched }) => (\n          <>\n            <Form>\n              <div>title</div>\n              <Field name=\"title\" type=\"input\" as={Input} placeholder=\"enter article's title\" />\n              {errors.title && touched.title ? <div>{errors.title}</div> : null}\n\n              <div>description</div>\n              <Field\n                name=\"description\"\n                type=\"input\"\n                as={Input}\n                placeholder=\"enter article's description\"\n              />\n              {errors.description && touched.description ? <div>{errors.description}</div> : null}\n              <div>body</div>\n              <Field name=\"body\" type=\"input\" as={Input} placeholder=\"enter article's body\" />\n              {errors.body && touched.body ? <div>{errors.body}</div> : null}\n              <FieldArray name=\"tagList\">\n                {arrayHelpers => (\n                  <>\n                    <div>tag</div>\n                    <Field\n                      name=\"tagList[0]\"\n                      type=\"input\"\n                      as={Input}\n                      placeholder=\"enter hashTag\"\n                      key={0}\n                    />\n                    {values.tagList.slice(1).map((item, index) => (\n                      <div key={uniqueId()}>\n                        <div>tag</div>\n                        <Field\n                          name={`tagList[${index + 1}]`}\n                          type=\"input\"\n                          as={Input}\n                          placeholder=\"enter hashTag\"\n                          key={`${values.tagList.length}${item}`}\n                        />\n                      </div>\n                    ))}\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"button\"\n                      disabled={isSubmitting}\n                      onClick={() => values.tagList[0] && arrayHelpers.push()}\n                    >\n                      add another hashTag\n                    </Button>\n                  </>\n                )}\n              </FieldArray>\n              <Button type=\"primary\" htmlType=\"submit\" disabled={isSubmitting}>\n                save changes\n              </Button>\n            </Form>\n          </>\n        )}\n      </Formik>\n    );\n  }\n}\nEditArticle.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n      author: PropTypes.object.isRequired,\n      createdAt: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      favorited: PropTypes.bool.isRequired,\n      favoritesCount: PropTypes.number.isRequired,\n      tagList: PropTypes.array.isRequired,\n      body: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  history: PropTypes.shape({\n    replace: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  user: PropTypes.shape({\n    token: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n  }).isRequired,\n};\nexport default withRouter(connect(mapStateToProps, actionCreators)(EditArticle));\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Nav() {\n  return (\n    <ul className=\"nav\">\n      <li>\n        <Link to=\"/login\">Login</Link>\n      </li>\n      <li>\n        <Link to=\"/registration\">Registration</Link>\n      </li>\n      <li>\n        <Link to=\"/\">MainPage</Link>\n      </li>\n      <li>\n        <Link to=\"/add\">Add Post</Link>\n      </li>\n    </ul>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport PropTypes from 'prop-types';\nimport Login from './components/Login';\nimport Registration from './components/Registration';\nimport MainPage from './components/MainPage';\nimport CreateNewArticle from './components/CreateNewArticle';\nimport OpenedArticle from './components/OpenedArticle';\nimport EditArticle from './components/EditArticle';\nimport Nav from './components/Nav';\nimport 'antd/dist/antd.css';\n\nconst mapStateToProps = state => {\n  const props = {\n    user: state.user,\n  };\n  return props;\n};\n\n// я все время при установки зависимостей пишу --save это норм, или надо все же разделять dev dep от обычных\nfunction App({ user }) {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n        <Route exact path=\"/login\">\n          {Object.keys(user).length > 0 ? <Redirect to=\"/\" /> : <Login />}\n        </Route>\n        <Route exact path=\"/registration\">\n          {Object.keys(user).length > 0 ? <Redirect to=\"/\" /> : <Registration />}\n        </Route>\n        <Route exact path=\"/\">\n          {!Object.keys(user).length > 0 ? <Redirect to=\"/login\" /> : <MainPage />}\n        </Route>\n        <Route exact path=\"/add\">\n          {!Object.keys(user).length > 0 ? <Redirect to=\"/login\" /> : <CreateNewArticle />}\n        </Route>\n        <Route exact path=\"/articles/:id\">\n          {!Object.keys(user).length > 0 ? <Redirect to=\"/login\" /> : <OpenedArticle />}\n        </Route>\n        <Route exact path=\"/articles/:id/edit\">\n          {!Object.keys(user).length > 0 ? <Redirect to=\"/login\" /> : <EditArticle />}\n        </Route>\n      </div>\n    </Router>\n  );\n}\n\nApp.propTypes = {\n  user: PropTypes.shape({\n    token: PropTypes.string,\n    username: PropTypes.string,\n  }).isRequired,\n};\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport './styles/index.sass';\nimport reducers from './reducers/rootReducer';\n\nimport App from './App';\n\n// import * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}